variables:
  GITLAB_CI_IMAGE_DOCKER: 'docker:19.03.12'
  GITLAB_CI_PYPI_DOCKER_COMPOSE: 'docker-compose~=1.23.0'
stages:
  - deploy
  - security

# 'deploy' stage
deploy:
  stage: deploy
  needs: []
  image: ${GITLAB_CI_IMAGE_DOCKER}
  services:
    - ${GITLAB_CI_IMAGE_DOCKER}-dind
  before_script:
    - apk --update add py-pip
    - pip install "$GITLAB_CI_PYPI_DOCKER_COMPOSE"
  variables:
    GNURADIO_VERSION: '3.8.2.0'
  script:
    - CACHE_IMAGE="${CI_REGISTRY_IMAGE:+$CI_REGISTRY_IMAGE/gnuradio:latest}"; export CACHE_IMAGE
    - docker-compose -f docker-compose.yml -f docker-compose.cache.yml pull cache_image || true
    - docker-compose -f docker-compose.yml -f docker-compose.cache.yml build --pull
    - |
      [ -z "$CI_REGISTRY_IMAGE" ] || {
          docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
          docker tag gnuradio:latest $CI_REGISTRY_IMAGE/gnuradio:$GNURADIO_VERSION
          docker tag gnuradio:latest $CI_REGISTRY_IMAGE/gnuradio:latest
          docker push $CI_REGISTRY_IMAGE/gnuradio:$GNURADIO_VERSION
          docker push $CI_REGISTRY_IMAGE/gnuradio:latest
      }
      [ -z "$DOCKERHUB_PASSWORD" ] || {
          docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
          docker tag gnuradio:latest librespace/gnuradio:$GNURADIO_VERSION
          docker tag gnuradio:latest librespace/gnuradio:latest
          docker push librespace/gnuradio:$GNURADIO_VERSION
          docker push librespace/gnuradio:latest
      }
  only:
    - master

# 'security' stage
include:
  - template: Security/Container-Scanning.gitlab-ci.yml
container_scanning:
  stage: security
  needs:
    - job: deploy
      artifacts: false
  variables:
    CI_APPLICATION_REPOSITORY: ${CI_REGISTRY_IMAGE}/gnuradio
    CI_APPLICATION_TAG: latest
  rules:
    - if: $CI_REGISTRY_IMAGE && $CI_COMMIT_BRANCH == "master"
